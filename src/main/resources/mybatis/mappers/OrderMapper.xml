<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.jhta.pony.dao.OrderDAO">
	<!-- ORDER는 예약어이므로 ''로 감싸 테이블임을 표시해야 함 -->

	<!-- =============== 관리자 ============== -->

	<select id="getAllByAdmin" resultType="kr.co.jhta.pony.dto.OrderDTO">
		SELECT orderNo, orderDate, memberNo, orderRecipientName, orderRecipientPhone, orderRecipientZip, orderRecipientAddress, orderRecipientAddressDetail, orderStatus, orderDeliveryCharge, orderPoint, orderTotal, orderPaymentTool
		FROM (SELECT orderNo, orderDate, memberNo, orderRecipientName, orderRecipientPhone, orderRecipientZip, orderRecipientAddress, orderRecipientAddressDetail, orderStatus, orderDeliveryCharge, orderPoint, orderTotal, orderPaymentTool
		FROM `ORDER` ORDER BY orderNo DESC) AS T1
		LIMIT #{skip}, #{perPageNum}
	</select>

	<!-- selectOne -->
	<select id="selectOne" parameterType="int" resultType="kr.co.jhta.pony.dto.OrderDTO">
		SELECT orderNo, orderDate, memberNo, orderRecipientName, orderRecipientPhone, orderRecipientZip, orderRecipientAddress, orderRecipientAddressDetail, orderStatus, orderDeliveryCharge, orderPoint, orderTotal, orderPaymentTool
		FROM `ORDER`
		WHERE orderNo = #{orderNo}
	</select>

	<!-- getTotal 전체 건수 카운트 -->
	<select id="getTotal" resultType="int">
		SELECT count(*)
		FROM `ORDER`
	</select>

	<!-- deleteOne -->
	<delete id="deleteOne" parameterType="int">
		DELETE
		FROM `ORDER`
		WHERE orderNo = #{orderNo}
	</delete>

	<!-- 배송비 조회 -->
	<select id="getOrderDeliveryCharge" resultType="int">
		SELECT orderDeliveryCharge
		FROM `ORDER`
		WHERE orderNo = #{orderNo}
	</select>

	<!-- 포인트 사용금액 조회 -->
	<select id="getOrderPoint" resultType="int">
		SELECT orderPoint
		FROM `ORDER`
		WHERE orderNo = #{orderNo}
	</select>

	<!-- 총 금액 업데이트 -->
	<update id="updateOrderTotal">
		UPDATE `ORDER`
		SET orderTotal = #{orderTotal}
		WHERE orderNo = #{orderNo}
	</update>

	<!-- 배송상태 변경 목적 -->
	<update id="changeDelivery" parameterType="String">
		UPDATE `ORDER`
		SET orderStatus = #{orderStatus}
		WHERE orderNo = #{orderNo}
	</update>


	<!-- =============== 고객 주문 ============== -->

	<select id="getAllByUser" resultType="kr.co.jhta.pony.dto.OrderDTO" parameterType="int">
		SELECT orderNo, orderDate, memberNo, orderRecipientName, orderRecipientPhone, orderRecipientZip, orderRecipientAddress, orderRecipientAddressDetail, orderStatus, orderDeliveryCharge, orderPoint, orderTotal, orderPaymentTool
		FROM `ORDER`
		WHERE memberNo = #{memberNo}
	</select>

	<!-- 주문 상품 정보 -->
	<select id="getPartsInfo" resultType="kr.co.jhta.pony.dto.OrderPageItemDTO">
		SELECT
		p.partNumber,
		p.partName,
		p.partPrice,
		m.modelName
		FROM
		PART p
		JOIN
		MODEL m ON p.modelNo = m.modelNo
		WHERE
		p.partNumber = #{partNumber};
	</select>

	<!-- 주문 정보 -->
	<select id="getOrderInfo" resultType="kr.co.jhta.pony.dto.OrderDetailDTO">
		SELECT
		p.partNumber,
		p.partPrice,
		m.modelName
		FROM
		PART p
		JOIN
		MODEL m ON p.modelNo = m.modelNo
		WHERE
		p.partNumber = #{partNumber};
	</select>

	<!-- 주문 테이블 등록 -->
	<insert id="insertOrder" parameterType="kr.co.jhta.pony.dto.OrderDTO">
		INSERT INTO `ORDER`(orderNo, orderDate, memberNo, orderRecipientName, orderRecipientPhone, orderRecipientZip, orderRecipientAddress, orderRecipientAddressDetail, orderStatus, orderDeliveryCharge, orderPoint, orderTotal, orderPaymentTool )
		VALUES (#{orderNo}, now(), #{memberNo}, #{orderRecipientName}, #{orderRecipientPhone }, #{orderRecipientZip }, #{orderRecipientAddress }, #{orderRecipientAddressDetail }, '배송준비중' , #{orderDeliveryCharge}, #{orderPoint}, #{orderTotal}, #{orderPaymentTool})
	</insert>

	<!-- 주문 아이템 디테일 테이블 등록 -->
	<insert id="insertOrderDetail">
		INSERT INTO ORDERDETAIL (orderNo, partNumber, orderdetailOrderQuantity, orderdetailAmount )
		VALUES (#{orderNo}, #{partNumber}, #{orderdetailOrderQuantity}, #{orderdetailAmount })
	</insert>

	<!-- 주문 후 멤버 포인트 차감 -->
	<update id="deductPoint">
		UPDATE MEMBER
		SET memberPoint = #{memberPoint}
		WHERE memberNo = #{memberNo}
	</update>

	<!-- 주문 후 상품 재고 차감 -->
	<update id="deductPartNo">
		UPDATE `PART`
		SET partNo = #{partNo}
		WHERE partNumber = #{partNumber}
	</update>

	<!-- 주문취소 -->
	<update id="orderCancle">
		UPDATE `ORDER` 
		SET orderStatus = '주문취소' 
		WHERE orderNo = #{orderNo}
	</update>

	<!-- 주문 상품 정보(주문취소) -->
	<select id="getOrderItemInfo" resultType="kr.co.jhta.pony.dto.OrderDetailDTO">
		SELECT * FROM `ORDER`
		WHERE orderNo = #{orderNo}
	</select>

	<!-- 주문 정보(주문 취소) -->
	<select id="getOrders" resultType="kr.co.jhta.pony.dto.OrderDTO">
		SELECT * FROM `ORDER`
		WHERE orderNo = #{orderNo}
	</select>


</mapper>